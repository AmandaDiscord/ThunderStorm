declare const Messages: {
    CLIENT_INVALID_OPTION: (prop: string, must: any) => string;
    CLIENT_INVALID_PROVIDED_SHARDS: string;
    CLIENT_MISSING_INTENTS: string;
    CLIENT_NOT_READY: (action: string) => string;
    TOKEN_INVALID: string;
    TOKEN_MISSING: string;
    WS_CLOSE_REQUESTED: string;
    WS_CONNECTION_EXISTS: string;
    WS_NOT_OPEN: (data?: string) => string;
    BITFIELD_INVALID: (bit: any) => string;
    SHARDING_INVALID: string;
    SHARDING_REQUIRED: string;
    INVALID_INTENTS: string;
    DISALLOWED_INTENTS: string;
    SHARDING_NO_SHARDS: string;
    SHARDING_IN_PROCESS: string;
    SHARDING_SHARD_NOT_FOUND: (id: number) => string;
    SHARDING_ALREADY_SPAWNED: (count: number) => string;
    SHARDING_PROCESS_EXISTS: (id: number) => string;
    SHARDING_WORKER_EXISTS: (id: number) => string;
    SHARDING_READY_TIMEOUT: (id: number) => string;
    SHARDING_READY_DISCONNECTED: (id: number) => string;
    SHARDING_READY_DIED: (id: number) => string;
    SHARDING_NO_CHILD_EXISTS: (id: number) => string;
    SHARDING_SHARD_MISCALCULATION: (shard: number, guild: string, count: number) => string;
    COLOR_RANGE: string;
    COLOR_CONVERT: string;
    FILE_NOT_FOUND: (file: string) => string;
    USER_NO_DMCHANNEL: string;
    VOICE_INVALID_HEARTBEAT: string;
    VOICE_USER_MISSING: string;
    VOICE_JOIN_CHANNEL: (full?: boolean) => string;
    VOICE_CONNECTION_TIMEOUT: string;
    VOICE_TOKEN_ABSENT: string;
    VOICE_SESSION_ABSENT: string;
    VOICE_INVALID_ENDPOINT: string;
    VOICE_CONNECTION_ATTEMPTS_EXCEEDED: (attempts: number) => string;
    VOICE_JOIN_SOCKET_CLOSED: string;
    VOICE_PLAY_INTERFACE_NO_BROADCAST: string;
    VOICE_PLAY_INTERFACE_BAD_TYPE: string;
    VOICE_PRISM_DEMUXERS_NEED_STREAM: string;
    VOICE_NOT_STAGE_CHANNEL: string;
    VOICE_STATE_UNCACHED_MEMBER: string;
    VOICE_STATE_NOT_OWN: string;
    VOICE_STATE_INVALID_TYPE: (name: string) => string;
    UDP_SEND_FAIL: string;
    UDP_ADDRESS_MALFORMED: string;
    UDP_CONNECTION_EXISTS: string;
    REQ_RESOURCE_TYPE: string;
    IMAGE_FORMAT: (format: string) => string;
    IMAGE_SIZE: (size: number) => string;
    MESSAGE_BULK_DELETE_TYPE: string;
    MESSAGE_NONCE_TYPE: string;
    TYPING_COUNT: string;
    SPLIT_MAX_LEN: string;
    BAN_RESOLVE_ID: (ban?: boolean) => string;
    FETCH_BAN_RESOLVE_ID: string;
    PRUNE_DAYS_TYPE: string;
    GUILD_CHANNEL_RESOLVE: string;
    GUILD_VOICE_CHANNEL_RESOLVE: string;
    GUILD_CHANNEL_ORPHAN: string;
    GUILD_OWNED: string;
    GUILD_MEMBERS_TIMEOUT: string;
    GUILD_UNCACHED_ME: string;
    INVALID_TYPE: (name: string, expected: any, an?: boolean) => string;
    INVALID_ELEMENT: (type: any, name: string, elem: any) => string;
    WEBHOOK_MESSAGE: string;
    MESSAGE_REFERENCE_MISSING: string;
    EMOJI_TYPE: string;
    EMOJI_MANAGED: string;
    MISSING_MANAGE_EMOJIS_PERMISSION: (guild: string) => string;
    REACTION_RESOLVE_USER: string;
    VANITY_URL: string;
    DELETE_GROUP_DM_CHANNEL: string;
    FETCH_GROUP_DM_CHANNEL: string;
    MEMBER_FETCH_NONCE_LENGTH: string;
    GLOBAL_COMMAND_PERMISSIONS: string;
    INTERACTION_ALREADY_REPLIED: string;
};
export = Messages;
